#include <iostream>
#include <cstdlib>
#include <ctime>
#include <fstream>

using namespace std;

int bubbleSort(int arr[], int n) {
    int operations = 0; // Счетчик операций

    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            operations++; // Увеличиваем счетчик на каждое сравнение
            if (arr[j] > arr[j + 1]) {
                swap(arr[j], arr[j + 1]);
                operations++; // Увеличиваем счетчик на каждую перестановку
            }
        }
    }
    return operations;
}

void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main() {
    setlocale(LC_ALL, "ru");

    int n;
    cout << "Введите n: ";
    cin >> n;

    int* easy = new int[n];   // Массив по возрастанию
    int* hard = new int[n];   // Массив по убыванию
    int* medium = new int[n]; // Рандомный массив

    srand(time(0));

    // Заполняем массивы
    for (int i = 0; i < n; i++) {
        easy[i] = i + 1;             // 1, 2, 3, ...
        hard[i] = n - i;             // n, n-1, n-2, ...
        medium[i] = rand() % 100;    // Случайные числа от 0 до 99
    }

    // Выводим исходные массивы
    cout << "\nИсходные массивы:\n";
    cout << "Легкий: "; printArray(easy, n);
    cout << "Сложный: "; printArray(hard, n);
    cout << "Средний: "; printArray(medium, n);

    // Открываем файл для записи количества операций
    ofstream outFile("operations.txt");

    // Сортируем массивы и записываем количество операций
    int easyOps = bubbleSort(easy, n);
    int hardOps = bubbleSort(hard, n);
    int mediumOps = bubbleSort(medium, n);

    // Выводим отсортированные массивы
    cout << "\nПосле пузырьковой сортировки:\n";
    cout << "Легкий: "; printArray(easy, n);
    cout << "Сложный: "; printArray(hard, n);
    cout << "Средний: "; printArray(medium, n);

    // Записываем результаты в файл
    if (outFile.is_open()) {
        outFile << "Количество операций:\n";
        outFile << "Легкий: " << easyOps << "\n";
        outFile << "Сложный: " << hardOps << "\n";
        outFile << "Средний: " << mediumOps << "\n";
        outFile.close();
        cout << "\nРезультаты записаны в файл operations.txt\n";
    } else {
        cout << "\nОшибка записи в файл!\n";
    }

    // Освобождаем память
    delete[] easy;
    delete[] hard;
    delete[] medium;

    return 0;
}
